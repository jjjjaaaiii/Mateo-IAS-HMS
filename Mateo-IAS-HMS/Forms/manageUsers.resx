<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Z4RVu16241do1dAOioFVpCwtmjtFrfrKCq0IbQfJn6I6NwRFtIiqq4GkQJVdeiRqqRnTQcx1vgFWVCew
        TpDo1sZ1VXBI54Sul9dEBVUI2nRgloVbfgDq69EqkMVfGAtCrOape2nHTWp0lTklHJ5nYeYlfzRLb9QV
        ijrCL7OEoKrQm4Idsi4Sqt1ySNNbzHKtcuuihNBtxwQGoIa1fhF2fuPrTunid88TZDL55Qa2/JNYI1Vt
        sYF4avBOGIqtVq9BbV9Rugj+NHs/317m14mnfQdXkpf46ygVWhHdNJz12e49UWt3ER1txmBpNZSsquZ+
        2uM2jW9u5tLm3c3dvlzCaqhF2P7YW7V+I8P7Sr2m6Eg2z+NrCFYfbHaquCA18S624/kdt+p/wIrs8S6Y
        cI/SIqt8wu5sRKq3zC1L8RKjfMMd+IirmB0a2LVq3yyNVH06DLUFVpNnziVVauVfU4/2xFVVyU7iCsWd
        u+Ma8s/2EeyR5EWusgzVSyaMwh34jOuaas5gCrHbBmXG/EV1ctQvNrzjrfJWl4O2sRbSKt3JvqPtiXK5
        V9RXAzNvzi1dctQKtomk0zACrGXbjMCoxtS2YoFW0TsbZtXQszdr95ur77R1c34fbNo0LuL/AP/aAAwD
        AQACAAMAAAAQwwwwwwwww8JxxxxAAAAAEEJhBBBBBJAAAARxBBBBBBF88AAphBBBBBBBk888EhBBBBBB
        FZs8888hBBNFNtcM888888BFs888888880400R8888888wNd999t8888888d99999998888889999999
        99888889999999999888w9999999991544N99999999x8889999999999x88889999999999c8888999
        99999s88888899991xUc88888889988c8888888888k8888888888888888888888888844888888888
        884Ec88888888888sc88888888888kc888888888888kc888888888888888888888888888s8888888
        88888888888888888//EABcRAQEBAQAAAAAAAAAAAAAAABEAYID/2gAIAQMBAT8Qx5Ecif/EABQRAQAA
        AAAAAAAAAAAAAAAAAID/2gAIAQIBAT8QSv8A/8QAKRABAAECBQMEAgMBAAAAAAAAAQARMSFAQVFhccHw
        MIGR0aHxECCx4f/aAAgBAQABPxDwrtPCu08K7TwrtPCu08K7TwrtPCu08K7TwrtPCu08K7TwrtPCu08K
        7TwrtPCu08K7TwrtPCu0TKpG79Urpwil80lTh9AR/k/XPqfrn1P1z6n659T9c+p+ufU/XPrJWKtpYRds
        UVUA5xfiN4/DT4zBlSHLSYKk4YfMwQH5Y/8AIOYHqJyzBUPgmCIHDvGast1r6q0KuBK8C2PvGdGGr6NN
        IbrSYWFcYEwhHyPmIqpXdfWcCC6tJWap0CN4ybMD49EapjsYrKoEd3FlSBbrkK9T/CSuzsND29GjUOdZ
        Uw5l/wDkSlSrdcgsMGrK5U/L6St0t/QlWjkyNKPCe+0xoqWFj0W5A1ZU6/53IgiALrLnuLtEopVxV19G
        proF2VW4FhYyAIgBqtJWz2eB8x/2gwD01rY6Ggei4Xwn74n6ZErj7JYH7JfW6Fl8X4mClb3YvVHlyTgQ
        arSVQC8YHzLGLgq/mXbdGkbgdX+KSmVUBVANWVcje2Om8r0vNjNsxB+Yqiulu65GpheWku5OGE0Y6qxV
        qOkfrkD1esBs3FSMhW/h8wAKEbJ/L8UuS1A+xkKge6jK8E4sX5ldLcWvoVk4aqz7QI6xAqfwlSxcOW/r
        iXNJvK0HwMX1cZsH2f8AXrOxBdZUOsbvSKqqqt19Z1KpV9WrTFYXZU7oLCxnCmmmmh1jRiXXOBU46vC8
        VVVVbrnMaNo6cGdxbbQ04M7RHFWHTgzikwasq1TX3yRqmLtAfbHBhX4zGCVPew/qB7QuMFWrfY+JWbXO
        mRrV4thdjOKmxb+wrvWh0SGjHQS6Q2rTJ7hVoQvVZyuHFwUvVXzlQYlbdGT1Wcxpi7Q3aq5yqUt3QjMi
        q65ujAH+ytdzc3TCG7AxGvL6lULcc0JgnGsdwoeFpUgXOYULodZ/lprLoHOBMGEO32iq1WrlbN12MWBq
        PKi7PQIi/tYS7P3irdXrl8Kg0NWV09rdzlcuLtC1qv8AmdQPVc4zWgRMp0jOG4q6BeVe4aBYzYNUBuy5
        8rtEpUq6uZAVQG7MNS+JhxD8sdqi8uZAwDjWIwoG7eJVRc5oStDY1Y7Sv8zFVqtXN01x3X6REUq6ubdK
        A1Yg1f8ATOM3oExzgbZwyegSoMAsbZxmtBdlUWNmdxH7mdpiuLd2zotqYDmJRWq4rnFAq4BFZ0YDO0Zt
        zplf/9k=
</value>
  </data>
</root>